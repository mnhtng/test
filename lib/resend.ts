import { Resend } from 'resend';
import EmailVerificationTemplate from '@/emails/EmailVerification';
import EmailResetPasswordTemplate from '@/emails/EmailResetPassword';

const resend = new Resend(process.env.RESEND_API_KEY);

export const sendPasswordResetEmail = async (
    to: string,
    resetUrl: string,
    name: string
) => {
    try {
        const { data, error } = await resend.emails.send({
            from: process.env.FROM_EMAIL as string,
            to: [to],
            subject: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n - VStack',
            react: EmailResetPasswordTemplate({
                name,
                resetUrl
            }),
            text: `
        Xin ch√†o ${name},

        Ch√∫ng t√¥i ƒë√£ nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n VStack c·ªßa b·∫°n.

        ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng click v√†o link b√™n d∆∞·ªõi:
        ${resetUrl}

        üîê Th√¥ng tin b·∫£o m·∫≠t quan tr·ªçng:
        ‚Ä¢ Link ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u n√†y s·∫Ω h·∫øt h·∫°n trong 1 gi·ªù
        ‚Ä¢ Link ch·ªâ c√≥ th·ªÉ s·ª≠ d·ª•ng m·ªôt l·∫ßn duy nh·∫•t
        ‚Ä¢ N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y
        ‚Ä¢ ƒê·ªÉ b·∫£o m·∫≠t, kh√¥ng chia s·∫ª link n√†y v·ªõi b·∫•t k·ª≥ ai

        N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, c√≥ th·ªÉ ai ƒë√≥ ƒëang c·ªë g·∫Øng truy c·∫≠p t√†i kho·∫£n c·ªßa b·∫°n.
        Trong tr∆∞·ªùng h·ª£p n√†y, vui l√≤ng ƒë·ªïi m·∫≠t kh·∫©u ngay l·∫≠p t·ª©c v√† li√™n h·ªá v·ªõi ch√∫ng t√¥i.

        Tr√¢n tr·ªçng,
        VStack Security Team
      `,
        });

        if (error) {
            console.error('Error sending password reset email:', error);
            throw new Error('Failed to send password reset email');
        }

        console.log('Password reset email sent successfully:', data);
        return data;
    } catch (error) {
        console.error('Error in sendPasswordResetEmail:', error);
        throw error;
    }
};

export const sendVerificationMail = async (
    to: string,
    verificationUrl: string,
    name: string
) => {
    try {
        const { data, error } = await resend.emails.send({
            from: process.env.FROM_EMAIL as string,
            to: [to],
            subject: 'X√°c minh ƒë·ªãa ch·ªâ email c·ªßa b·∫°n - VStack',
            react: EmailVerificationTemplate({
                name,
                verificationUrl
            }),
            text: `
        Xin ch√†o ${name},

        C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i VStack!

        ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng x√°c minh ƒë·ªãa ch·ªâ email c·ªßa b·∫°n b·∫±ng c√°ch click v√†o link b√™n d∆∞·ªõi:
        
        ${verificationUrl}

        Link x√°c minh n√†y s·∫Ω h·∫øt h·∫°n trong 24 gi·ªù.

        N·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n n√†y, vui l√≤ng b·ªè qua email n√†y.

        Tr√¢n tr·ªçng,
        VStack Team
      `,
        });

        if (error) {
            console.error('Error sending verification email:', error);
            throw new Error('Failed to send verification email');
        }

        console.log('Verification email sent successfully:', data);
        return data;
    } catch (error) {
        console.error('Error in sendEmailVerificationOnly:', error);
        throw error;
    }
};